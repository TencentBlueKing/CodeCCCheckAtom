buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.maven.apache.org/maven2" }
        mavenCentral()
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.1.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.10"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.3.21"
    }

    ext {
        bouncyCastleVersion = "1.46"
        svnkitVersion = "1.9.3"
        commonExecVersion = "1.3"
        jacksonVersion = "2.9.2"
        jacksonDatabindVersion = "2.13.4.2"
        compressVersion = "1.15"
        javaPluginSdkVersion = "1.1.5"
        kotlinVersion = "1.5.30"
    }
}


static def getValue(String key, Object defaultValue) {
    def value = System.getProperty(key)
    if (value == null) {
        value = System.getenv(key)
    }
    if (value == null) {
        value = defaultValue.toString()
    }
    return value
}

def mavenCredUserName = getValue("mavenCredUserName", getProperty("MAVEN_CRED_USERNAME"))
def mavenCredPassword = getValue("mavenCredPassword", getProperty("MAVEN_CRED_PASSWORD"))

//clean{
//    delete fileTree('src/main/resources/codecc_agent.zip')
//}

//task zip(type: Zip) {
//    from ('src/main/codecc_agent')
//    archiveName 'codecc_agent.zip'
//    into 'codecc_agent'
//    destinationDir(file('src/main/resources/'))
//}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}


allprojects {
    group 'com.tencent.bk.devops'
    apply plugin: "kotlin"
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "application"

    repositories {
        mavenLocal()
        jcenter()
        maven { url "https://repo.maven.apache.org/maven2" }
        mavenCentral()
    }

    dependencies {
        compile "com.tencent.devops.ci-plugins:java-plugin-sdk:${javaPluginSdkVersion}"
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
        compile "org.bouncycastle:bcprov-jdk16:$bouncyCastleVersion"
        compile "org.apache.commons:commons-exec:$commonExecVersion"
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonDatabindVersion"
        compile "org.apache.commons:commons-compress:$compressVersion"
        compile "org.hashids:hashids:1.0.3"
        compile group: 'commons-codec', name: 'commons-codec', version: '1.15'
        compile "org.tukaani:xz:1.2"
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    shadowJar {
        // baseName为插件默认打包名+".jar"，bkdevops-plugin.jar
        // 如果修改，则要一同修改插件task.json中的target启动命令
        // 为了省事，建议不用修改
        baseName = "CodeCCCheckAtom"
        classifier = null
        zip64 true
    }

    task copyFrontend(type:Copy) {
        from "../../frontend/dist"
        into "../../frontend/target/frontend"
    }

    task buildZip(type: Zip, dependsOn: [shadowJar, copyFrontend]) {
        from "build/libs", "task.json", "quality.json", "../../frontend/target"
        into "CodeCCCheckAtom"
    }

    task buildAndCopyZip(type: Copy, dependsOn: [buildZip]) {
        from "build/distributions"
        into "build/distributions"
        rename { String fileName ->
            // a simple way is to remove the "-$version" from the jar filename
            // but you can customize the filename replacement rule as you wish.
            fileName = "CodeCCCheckAtom.zip"
        }
    }

    check.dependsOn ktlint

    // 固定入口类 不要改
    mainClassName = "com.tencent.bk.devops.atom.AtomRunner"
}