buildscript {
    def mavenRepoUrl = System.getProperty("mavenRepoUrl")
    if (mavenRepoUrl == null) {
        mavenRepoUrl = System.getenv("mavenRepoUrl")
    }
    if (mavenRepoUrl == null) {
        mavenRepoUrl = MAVEN_REPO_URL
    }
    println("mavenRepoUrl=" + mavenRepoUrl)
    repositories {
        mavenLocal()
        maven { url mavenRepoUrl }
    }

    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:2.0.2"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.50"
        classpath "org.jetbrains.kotlin:kotlin-allopen:1.2.10"
    }

    ext {
        bouncyCastleVersion = "1.46"
        svnkitVersion = "1.9.3"
        commonExecVersion = "1.3"
        jacksonVersion = "2.9.2"
        compressVersion = "1.15"
    }
}


static def getValue(String key, Object defaultValue) {
    def value = System.getProperty(key)
    if (value == null) {
        value = System.getenv(key)
    }
    if (value == null) {
        value = defaultValue.toString()
    }
    return value
}

def mavenCredUserName = getValue("mavenCredUserName", getProperty("MAVEN_CRED_USERNAME"))
def mavenCredPassword = getValue("mavenCredPassword", getProperty("MAVEN_CRED_PASSWORD"))

//clean{
//    delete fileTree('src/main/resources/codecc_agent.zip')
//}

//task zip(type: Zip) {
//    from ('src/main/codecc_agent')
//    archiveName 'codecc_agent.zip'
//    into 'codecc_agent'
//    destinationDir(file('src/main/resources/'))
//}

configurations {
    ktlint
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}


allprojects {
    group 'com.tencent.bk.devops'
    apply plugin: "kotlin"
    apply plugin: "com.github.johnrengelman.shadow"
    apply plugin: "application"

    repositories {
        def mavenRepoUrl = System.getProperty("mavenRepoUrl")
        if (mavenRepoUrl == null) {
            mavenRepoUrl = System.getenv("mavenRepoUrl")
        }
        if (mavenRepoUrl == null) {
            mavenRepoUrl = MAVEN_REPO_URL
        }
        println("mavenRepoUrl=" + mavenRepoUrl)
        mavenLocal()
        maven {
            url "https://maven.pkg.github.com/ci-plugins/java-plugin-sdk"
            credentials {
                username = mavenCredUserName
                password = mavenCredPassword
            }
        }
        maven { url mavenRepoUrl }
    }

    dependencies {
//    compile "com.tencent.bk.devops.atom:java-atom-sdk:1.0.25-2020032705-SNAPSHOT"
        compile "com.tencent.bk.devops.atom:java-atom-sdk:1.1.3-20200802401"
//    compile "com.tencent.bk.devops.atom:java-atom-sdk:1.0.24"
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
//        ktlint "com.github.shyiko:ktlint:0.34.2"
        compile group: 'com.squareup.okhttp3', name: 'okhttp'
        compile "org.bouncycastle:bcprov-jdk16:$bouncyCastleVersion"
        compile "org.apache.commons:commons-exec:$commonExecVersion"
        compile "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jacksonVersion"
        compile "org.apache.commons:commons-compress:$compressVersion"
        compile "org.hashids:hashids:1.0.3"
        testCompile group: 'junit', name: 'junit', version: '4.12'
//    testCompile "com.tencent.bk.devops.atom:java-atom-sdk:1.0.25-2020032705-SNAPSHOT"
        testCompile "com.tencent.bk.devops.atom:java-atom-sdk:1.0.25-2020052802-SNAPSHOT"
//    testCompile "com.tencent.bk.devops.atom:java-atom-sdk:1.0.24"
        compile("org.apache.commons:commons-compress:1.15")
    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }
    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    shadowJar {
        // baseName为插件默认打包名+".jar"，bkdevops-plugin.jar
        // 如果修改，则要一同修改插件task.json中的target启动命令
        // 为了省事，建议不用修改
        baseName = "CodeccCheckAtom"
        classifier = null
        zip64 true
    }

    task buildZip(type: Zip, dependsOn: shadowJar) {
        from "build/libs", "./task.json", "./quality.json"
        into "${project.name}"
    }

    check.dependsOn ktlint

    // 固定入口类 不要改
    mainClassName = "com.tencent.bk.devops.atom.AtomRunner"
}